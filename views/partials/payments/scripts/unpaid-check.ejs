<script>
  // Check for unpaid previous months
  function checkUnpaidPreviousMonths() {
    // Ensure toast manager is available
    if (typeof toastManager === 'undefined') {
      console.warn('ToastManager not yet available, retrying...');
      setTimeout(checkUnpaidPreviousMonths, 1000);
      return;
    }
    
    // Kh√¥ng hi·ªÉn th·ªã toast n·∫øu user ƒë√£ ch·ªçn th√°ng c·ª• th·ªÉ
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('month')) {
      console.log('üîç Month parameter found in URL, skipping unpaid warnings');
      return;
    }
    
    fetch('/api/unpaid-previous-months')
      .then(response => response.json())
      .then(data => {
        if (data.success && data.unpaidMonths.length > 0) {
          console.log('üîç Found unpaid months:', data.unpaidMonths);
          
          data.unpaidMonths.forEach((item, index) => {
            createUnpaidToast(item, index * 500);
          });
        }
      })
      .catch(error => {
        console.error('‚ùå Error checking unpaid months:', error);
      });
  }

  // Create unpaid month warning toast using shared toast system
  function createUnpaidToast(item, delay) {
    setTimeout(() => {
      const toastId = `toast-unpaid-${item.monthKey}`;
      const message = `
        C√≤n <strong>${item.count} ph√≤ng</strong> th√°ng <strong>${item.month}</strong> ch∆∞a thanh to√°n!
        <div style="margin-top: 8px;">
          <button class="btn btn-warning btn-sm" onclick="viewUnpaidMonth('${item.monthKey}', '${toastId}')" style="font-size: 0.75em; padding: 4px 8px;">
            <i class="fas fa-eye"></i> Xem ngay
          </button>
        </div>
      `;
      
      // Use shared toast system v·ªõi custom title
      if (typeof toastManager !== 'undefined') {
        const toast = toastManager.show(message, 'warning', 8000, 'C·∫£nh b√°o thanh to√°n');
        // Set ID cho toast ƒë·ªÉ c√≥ th·ªÉ t√¨m v√† ·∫©n sau
        if (toast) {
          toast.id = toastId;
        }
      } else {
        console.error('ToastManager is not defined');
      }
    }, delay);
  }

  // Function to handle "Xem ngay" button click
  function viewUnpaidMonth(monthKey, toastId) {
    // ·∫®n toast tr∆∞·ªõc khi chuy·ªÉn trang
    const toast = document.getElementById(toastId);
    if (toast) {
      toast.classList.add('hide');
      setTimeout(() => {
        changeMonth(monthKey);
      }, 300); // ƒê·ª£i toast ·∫©n xong r·ªìi m·ªõi chuy·ªÉn trang
    } else {
      // Fallback n·∫øu kh√¥ng t√¨m th·∫•y toast
      changeMonth(monthKey);
    }
  }
</script> 